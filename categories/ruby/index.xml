<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Ruby on mitaku.log </title>
      <generator uri="https://gohugo.io">Hugo</generator>
    <link>https://mitaku.github.io/categories/ruby/index.xml</link>
    <language>ja</language>
    <author>TakumiMIURA</author>
    <copyright>© 2016 Copyright Takumi Miura</copyright>
    <updated>Mon, 01 Jan 0001 00:00:00 UTC</updated>
    
    <item>
      <title>Rubyで可逆暗号</title>
      <link>https://mitaku.github.io/blog/2015/12/02/ruby-reversible-cryptography/</link>
      <pubDate>Wed, 02 Dec 2015 00:00:00 UTC</pubDate>
      <author>TakumiMIURA</author>
      <guid>https://mitaku.github.io/blog/2015/12/02/ruby-reversible-cryptography/</guid>
      <description>&lt;h2 id=&#34;はじめに&#34;&gt;はじめに&lt;/h2&gt;

&lt;p&gt;これは &lt;a href=&#34;http://www.adventar.org/calendars/1044&#34;&gt;【その2】ドリコム Advent Calendar 2015&lt;/a&gt; 2日目の記事です&lt;/p&gt;

&lt;p&gt;1日目の記事はarihhさんの「&lt;a href=&#34;http://arihh.hatenablog.jp/entry/2015/12/01/005948&#34;&gt;カンバンの管理に改善を加えたら加速した話 - arihhのブログ&lt;/a&gt;」です&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.adventar.org/calendars/1043&#34;&gt;【その1】ドリコム Advent Calendar 2015 - Adventar&lt;/a&gt; もあります!&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;めっちゃブログ書くのが久しぶりで、このブログの更新の仕方を忘れてたりしました。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;あと、モンハンやりたい。モンハンやりたい、モンハンやりたい&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;※エンジニア向けの記事です&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&#34;本題-rubyで可逆暗号-その情報を知りたくない僕らは&#34;&gt;本題 - 「Rubyで可逆暗号-その情報を知りたくない僕らは」&lt;/h2&gt;

&lt;p&gt;生データとして扱いたくない情報を難読化する話をします!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;※エンジニア向けの記事です&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;エンジニアの自分が-生データとして扱いたくない情報&#34;&gt;(エンジニアの自分が)生データとして扱いたくない情報&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;何かのアカウント(ID/PW)&lt;/li&gt;
&lt;li&gt;自分のものじゃない秘密鍵&lt;/li&gt;
&lt;li&gt;ユニークなギフトコード&lt;/li&gt;
&lt;li&gt;etc&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;などなど。思い当たるものはないでしょうか？&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;最近、ドリコムではAWSの活用事例が増えてきました。&lt;/p&gt;

&lt;p&gt;AWSを便利に活用させていただいているのですが、必然的にアクセスキーやシークレットキーを取り扱う必要がでてきます。&lt;/p&gt;

&lt;p&gt;アクセスキーとシークレットキーが漏れたりすると何が起こるかわかりません。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;情報漏えいはシステムよりも人間が原因になることのほうが多い&lt;/strong&gt;と教わってきたので&lt;/p&gt;

&lt;p&gt;個人的には知らなくてよければ知らないまま過ごしたい情報です。&lt;/p&gt;

&lt;p&gt;なので、少しでも心を穏やかにするために、生のデータを扱うの避けて、一工夫して運用しています。&lt;/p&gt;

&lt;h3 id=&#34;rubyで可逆暗号&#34;&gt;Rubyで可逆暗号&lt;/h3&gt;

&lt;h4 id=&#34;activesupport-messageencryptor&#34;&gt;ActiveSupport::MessageEncryptor&lt;/h4&gt;

&lt;p&gt;みんなだいすき&lt;code&gt;ActiveSupport&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;それ、&lt;code&gt;ActiveSupport::MessageEncryptor&lt;/code&gt;でできるよ!!&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://qiita.com/kengos@github/items/e8ea8f71c47852fde48b&#34;&gt;Railsで簡単可逆暗号(ActiveSupport::MessageEncryptor)&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #f0f3f3&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;secret &lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #336600&#34;&gt;SecureRandom&lt;/span&gt;&lt;span style=&#34;color: #555555&#34;&gt;::&lt;/span&gt;hex(&lt;span style=&#34;color: #FF6600&#34;&gt;128&lt;/span&gt;)
&lt;span style=&#34;color: #0099FF; font-style: italic&#34;&gt;#=&amp;gt; &amp;quot;13f3bab71cc735eea473e8fd225bb04232d23eadf194bd066179e09871fdf9244b454c38ebd6715e03b903d595b8ac5d75488dff2d9d48f3d2eb5e9a026ebbb4ef799e9596376f63a49640e9336f9b011fa8972a763a6d1fe13b5d4d096a34cdeba91636c86b70e9a88fab56f2a4f6b19eee801ac0d1e3415bb17b8f92f0133b&amp;quot;&lt;/span&gt;
encryptor &lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #555555&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color: #336600&#34;&gt;ActiveSupport&lt;/span&gt;&lt;span style=&#34;color: #555555&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color: #336600&#34;&gt;MessageEncryptor&lt;/span&gt;&lt;span style=&#34;color: #555555&#34;&gt;.&lt;/span&gt;new(secret, &lt;span style=&#34;color: #FFCC33&#34;&gt;cipher&lt;/span&gt;: &lt;span style=&#34;color: #CC3300&#34;&gt;&amp;#39;aes-256-cbc&amp;#39;&lt;/span&gt;)
encrypt_message &lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt; encryptor&lt;span style=&#34;color: #555555&#34;&gt;.&lt;/span&gt;encrypt_and_sign(&lt;span style=&#34;color: #CC3300&#34;&gt;&amp;quot;target_message&amp;quot;&lt;/span&gt;)
&lt;span style=&#34;color: #0099FF; font-style: italic&#34;&gt;#=&amp;gt; &amp;quot;QjlkVndyeERrV3BUcW1paVVkTDJQTWhzV3R5OEV3N3JsR2FnV0VxRjdCTT0tLUJFSmdLTUNFbHdmZHhWcjZUQllUR0E9PQ==--6f6d897b52cfad56d9a31f8a19d44481e5343f18&amp;quot;&lt;/span&gt;
encryptor&lt;span style=&#34;color: #555555&#34;&gt;.&lt;/span&gt;decrypt_and_verify(encrypt_message) &lt;span style=&#34;color: #555555&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color: #CC3300&#34;&gt;&amp;quot;target_message&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #0099FF; font-style: italic&#34;&gt;#=&amp;gt; true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;便利ですね。
これだけだと芸がないので、ドリコムでの事例を紹介します!&lt;/p&gt;

&lt;h4 id=&#34;reversiblecryptography&#34;&gt;ReversibleCryptography&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/mitaku/reversible_cryptography&#34;&gt;reversible_cryptography&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;という自作gemを使ってます。&lt;/p&gt;

&lt;p&gt;READMEより&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #f0f3f3&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;secret &lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #CC3300&#34;&gt;&amp;quot;password&amp;quot;&lt;/span&gt;
encrypted_message &lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #336600&#34;&gt;ReversibleCryptography&lt;/span&gt;&lt;span style=&#34;color: #555555&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color: #336600&#34;&gt;Message&lt;/span&gt;&lt;span style=&#34;color: #555555&#34;&gt;.&lt;/span&gt;encrypt(&lt;span style=&#34;color: #CC3300&#34;&gt;&amp;quot;target_message&amp;quot;&lt;/span&gt;, secret)
&lt;span style=&#34;color: #0099FF; font-style: italic&#34;&gt;#=&amp;gt; &amp;quot;md5:388eeae24576572f946e9043a2118b2d:salt:161-225-182-109-143-90-1-28:aes-256-cfb:DHY6DF3+iFzH36FMbeI=&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #336600&#34;&gt;ReversibleCryptography&lt;/span&gt;&lt;span style=&#34;color: #555555&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color: #336600&#34;&gt;Message&lt;/span&gt;&lt;span style=&#34;color: #555555&#34;&gt;.&lt;/span&gt;decrypt(encrypted_message, secret) &lt;span style=&#34;color: #555555&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color: #CC3300&#34;&gt;&amp;quot;target_message&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #0099FF; font-style: italic&#34;&gt;#=&amp;gt; true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;簡単ですね。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;※上記例とは暗号化方式等,諸々違うため堅牢度合いは違います&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;※暗号化するものが簡単な英単語だったりする場合,MD5から逆引きされる可能性があります&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;※パスワードの強度は高いものを利用しています&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;もう一工夫&#34;&gt;もう一工夫&lt;/h3&gt;

&lt;p&gt;Railsに限った話ではないですがアプリでの利用方法も記載します&lt;/p&gt;

&lt;p&gt;各種設定はyamlファイルに記載することが多く、
このようにYAMLのプライベートタイプを追加し環境変数を利用するようにしています。&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #f0f3f3&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #006699; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #00AA88; font-weight: bold&#34;&gt;ReversibleEncryptedString&lt;/span&gt; &lt;span style=&#34;color: #555555&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #336600&#34;&gt;BasicObject&lt;/span&gt;
  &lt;span style=&#34;color: #006699; font-weight: bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #CC00FF&#34;&gt;initialize&lt;/span&gt;(str)
    &lt;span style=&#34;color: #003333&#34;&gt;@str&lt;/span&gt; &lt;span style=&#34;color: #555555&#34;&gt;=&lt;/span&gt; str
  &lt;span style=&#34;color: #006699; font-weight: bold&#34;&gt;end&lt;/span&gt;

  &lt;span style=&#34;color: #006699; font-weight: bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #CC00FF&#34;&gt;decrypted_string&lt;/span&gt;
    &lt;span style=&#34;color: #003333&#34;&gt;@raw&lt;/span&gt; &lt;span style=&#34;color: #555555&#34;&gt;||=&lt;/span&gt; &lt;span style=&#34;color: #555555&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color: #336600&#34;&gt;ReversibleCryptography&lt;/span&gt;&lt;span style=&#34;color: #555555&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color: #336600&#34;&gt;Message&lt;/span&gt;&lt;span style=&#34;color: #555555&#34;&gt;.&lt;/span&gt;decrypt(&lt;span style=&#34;color: #003333&#34;&gt;@str&lt;/span&gt;, &lt;span style=&#34;color: #555555&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color: #336600&#34;&gt;ENV&lt;/span&gt;&lt;span style=&#34;color: #555555&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #CC3300&#34;&gt;&amp;quot;REVERSIBLE_CRYPTOGRAPY_SECRET&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #555555&#34;&gt;]&lt;/span&gt;)
  &lt;span style=&#34;color: #006699; font-weight: bold&#34;&gt;end&lt;/span&gt;

  alias_method &lt;span style=&#34;color: #FFCC33&#34;&gt;:to_s&lt;/span&gt;, &lt;span style=&#34;color: #FFCC33&#34;&gt;:decrypted_string&lt;/span&gt;

  &lt;span style=&#34;color: #006699; font-weight: bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #CC00FF&#34;&gt;method_missing&lt;/span&gt;(&lt;span style=&#34;color: #336666&#34;&gt;method&lt;/span&gt;, &lt;span style=&#34;color: #555555&#34;&gt;*&lt;/span&gt;args)
    decrypted_string&lt;span style=&#34;color: #555555&#34;&gt;.&lt;/span&gt;__send__(&lt;span style=&#34;color: #336666&#34;&gt;method&lt;/span&gt;, &lt;span style=&#34;color: #555555&#34;&gt;*&lt;/span&gt;args)
  &lt;span style=&#34;color: #006699; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;span style=&#34;color: #006699; font-weight: bold&#34;&gt;end&lt;/span&gt;

&lt;span style=&#34;color: #336600&#34;&gt;YAML&lt;/span&gt;&lt;span style=&#34;color: #555555&#34;&gt;.&lt;/span&gt;add_private_type(&lt;span style=&#34;color: #CC3300&#34;&gt;&amp;quot;Encrypted&amp;quot;&lt;/span&gt;) &lt;span style=&#34;color: #006699; font-weight: bold&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color: #555555&#34;&gt;|&lt;/span&gt;_type, val&lt;span style=&#34;color: #555555&#34;&gt;|&lt;/span&gt;
  &lt;span style=&#34;color: #336600&#34;&gt;ReversibleEncryptedString&lt;/span&gt;&lt;span style=&#34;color: #555555&#34;&gt;.&lt;/span&gt;new(val)
&lt;span style=&#34;color: #006699; font-weight: bold&#34;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #f0f3f3&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;aws:
  endpoint: &lt;span style=&#34;color: #CC3300&#34;&gt;&amp;quot;ec2.ap-northeast-1.amazonaws.com&amp;quot;&lt;/span&gt;
  access_key_id: &lt;span style=&#34;color: #007788; font-weight: bold&#34;&gt;!x-private&lt;/span&gt;:Encrypted &amp;quot;md5:109a42207275ce753e4923575ace3e12:salt:255-105-253-88-5-107-47-24:aes-256-cfb:4n++p1w8WZrjzmjna8W1mqh6PSA=&amp;quot;
  secret_access_key: &lt;span style=&#34;color: #007788; font-weight: bold&#34;&gt;!x-private&lt;/span&gt;:Encrypted &amp;quot;md5:7844e3da7a807eb915207f7a36d4087b:salt:54-109-31-32-93-207-203-85:aes-256-cfb:l1OeNofj0C+vlsWfPfrTwQ==&amp;quot;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;環境変数の設定には&lt;a href=&#34;https://github.com/bkeepers/dotenv&#34;&gt;Dotenv&lt;/a&gt;を利用しているところもあります。&lt;/p&gt;

&lt;h3 id=&#34;reversiblecryptographyの活用プロダクト&#34;&gt;ReversibleCryptographyの活用プロダクト&lt;/h3&gt;

&lt;p&gt;弊社sue445さんのgemでも利用されています!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/sue445/itamae-plugin-resource-encrypted_remote_file&#34;&gt;itamae-plugin-resource-encrypted_remote_file gem&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://sue445.hatenablog.com/entry/2015/05/09/185807&#34;&gt;itamae-plugin-resource-encrypted_remote_file を作った&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;おわりに&#34;&gt;おわりに&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;情報漏えいは人が原因のほうが多い!&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;意識をしつつ、健全な開発をしましょう!&lt;/li&gt;
&lt;li&gt;知りたくない情報は暗号化してからもらいましょう!&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;可逆暗号ができる&lt;a href=&#34;https://github.com/mitaku/reversible_cryptography&#34;&gt;ReversibleCryptography gem&lt;/a&gt;の紹介をしました

&lt;ul&gt;
&lt;li&gt;気が向いたら使ってみてもらえれば幸いです!&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ということで次はnakajiさんです!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>RubyKaigi2014で発表した</title>
      <link>https://mitaku.github.io/blog/2014/09/22/rubykaigi-2014-speech/</link>
      <pubDate>Mon, 22 Sep 2014 00:00:00 UTC</pubDate>
      <author>TakumiMIURA</author>
      <guid>https://mitaku.github.io/blog/2014/09/22/rubykaigi-2014-speech/</guid>
      <description>&lt;p&gt;RubyKaigi 2014めっちゃいいKaigiだった。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;初めての発表&#34;&gt;初めての発表&lt;/h2&gt;

&lt;p&gt;今回初めてSpeakerとしてRubyKaigiに参加した。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://rubykaigi.org/2014/presentation/S-TakumiMiura&#34;&gt;発表者情報&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;感想&#34;&gt;感想&lt;/h3&gt;

&lt;p&gt;めっちゃ緊張した。&lt;/p&gt;

&lt;p&gt;でも会議っぽい(?)写真取りたかったので、こんなことをしてみたり&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://photos-d.ak.instagram.com/hphotos-ak-xfa1/10654988_1524824864402355_142010473_n.jpg&#34; alt=&#34;photo&#34; /&gt;&lt;/p&gt;

&lt;p&gt;セミインターナショナルなKaigiということで発表自体は日本語だったけれどもスライドは英語にしようと思ってせっせと準備をしました。&lt;/p&gt;

&lt;p&gt;結構なスライドの枚数になってしまい通訳の方が大変だったんじゃないかとすごく思う。
また、RubyKaigiのスタッフの方々がスライドチェックなどをしてくれて少しはまともな資料になりました！&lt;/p&gt;

&lt;p&gt;通訳の方、スタッフのみなさんありがとうございました!&lt;/p&gt;

&lt;h3 id=&#34;スライド&#34;&gt;スライド&lt;/h3&gt;

&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;ed2e4fa0221e0132318076af556e37c5&#34; data-ratio=&#34;1.33333333333333&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;

&lt;h2 id=&#34;gem-of-this-week-building-culture-and-making-gem&#34;&gt;&amp;ldquo;Gem of this Week&amp;rdquo; - building culture and making gem&lt;/h2&gt;

&lt;p&gt;というタイトルで発表をした。&lt;/p&gt;

&lt;p&gt;内容は僕が転職をして1年かけてカジュアルにgemを作るチームを作ってきた話。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;今週のgem&lt;/strong&gt;というコーナーで毎週のようにgemが更新されたり作成されていく環境を見せることができるようになったのでgemを作ることが&lt;strong&gt;特別&lt;/strong&gt;じゃなくしました。&lt;/p&gt;

&lt;p&gt;その結果チームメンバーがカジュアルにgemを作るようになった。&lt;/p&gt;

&lt;h4 id=&#34;想い&#34;&gt;想い&lt;/h4&gt;

&lt;p&gt;今週のgemを初めた時の想いとしては&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;もっと楽したい。&lt;/li&gt;
&lt;li&gt;楽しいことをしていたい。&lt;/li&gt;
&lt;li&gt;同じことを繰り返したくない。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;だった。&lt;/p&gt;

&lt;p&gt;発表することになった時に
同じように共通化して社内gemみたいなの作って楽になる人たちはいっぱいいるんじゃないかと思った。
僕のとったアプローチの紹介をすることによっていろんな人の生活が良くなればいいなぁなんて想いながら発表準備をしてました。&lt;/p&gt;

&lt;h3 id=&#34;アプローチのまとめ&#34;&gt;アプローチのまとめ&lt;/h3&gt;

&lt;h4 id=&#34;privateなgemserverを用意する&#34;&gt;privateなgemserverを用意する&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;弊社は&lt;a href=&#34;https://github.com/geminabox/geminabox&#34;&gt;geminabox&lt;/a&gt;を使ってる&lt;/li&gt;
&lt;li&gt;privateなのでどんなgemをアップしても大丈夫&lt;/li&gt;
&lt;li&gt;メンテされていないgemへの辛いモンキーパッチはforkしてgem化できる&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;※deployの観点からgemにしているほうが気楽だった&lt;/p&gt;

&lt;p&gt;※Gemfileでgitのsourceを指定するという手段もある&lt;/p&gt;

&lt;h4 id=&#34;自由にgitリポジトリを作れるようにする&#34;&gt;自由にgitリポジトリを作れるようにする&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;弊社はGitLabを使っている。&lt;/li&gt;
&lt;li&gt;メンバーは自由に他のプロジェクトを見ることができる&lt;/li&gt;
&lt;li&gt;メンバーは自由にプロジェクトを作ることができる&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;コミュニケーションできる場を作る&#34;&gt;コミュニケーションできる場を作る&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;作ったgemのアナウンスをしたり、理想の開発とか語ったり&lt;/li&gt;
&lt;li&gt;弊社は週に1回各チームのメインエンジニアが集まるミーティングがあり、そこでアナウンスをしたりしていた。(今週のgem)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;αとしてgemを作る障壁を下げていく&#34;&gt;+αとしてgemを作る障壁を下げていく&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;gemとはカジュアルに作るものであるというイメージ化 &lt;code&gt;今週のgem&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;gemを簡単に作り、簡単にデプロイできるgemを作る &lt;code&gt;drecom_gem&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;新卒の子にも作ってもらった&lt;/li&gt;
&lt;li&gt;多くのgemを作っていくことによって、参考例をたくさん作った&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;雑記&#34;&gt;雑記&lt;/h3&gt;

&lt;p&gt;読み原稿的なのも一緒にアップすればよかったな&amp;hellip;&lt;/p&gt;

&lt;p&gt;別の記事で書きたいと思います!&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://rubykaigi.org/2014/images/badge-for-speaker.png&#34; alt=&#34;speaker&#34; /&gt;
&lt;img src=&#34;http://rubykaigi.org/2014/images/badge-for-official-sponsor.png&#34; alt=&#34;sponsor&#34; /&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
